version: "3.8"

services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-16.1-alpine}
    env_file: ./.env
    environment:
      - POSTGRES_LOGGING=true
    ports:
      - 127.0.0.1:${POSTGRES_PORT:-5432}:5432
    shm_size: '2gb'
    volumes:
      - ./config/postgresql/postgresql.conf:/etc/postgresql.conf
      - postgres-data:/var/lib/postgresql/data
    command: [
      "-c", "config_file=/etc/postgresql.conf"
    ]
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-node-ogmios:
    image: cardanosolutions/cardano-node-ogmios:${OGMIOS_VERSION:-v6.0.0-rc5}_${CARDANO_NODE_VERSION:-8.1.2}-${NETWORK:-mainnet}
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
    ports:
      - 127.0.0.1:${OGMIOS_PORT:-1337}:1337
      - 3000:3000
    volumes:
      - node-db:/db
      - node-ipc:/ipc
#      - ./config/cardano-node-ogmios/topology.json:/config/cardano-node/topology.json
    restart: on-failure


  cardano-db-sync:
    image: inputoutput/cardano-db-sync:${CARDANO_DB_SYNC_VERSION:-13.1.1.3}
    env_file: ./.env
    command: [
      "--config", "/config-db-sync/config.json",
      "--socket-path", "/node-ipc/node.socket",
      "--consumed-tx-out"
    ]
    environment:
      - EKG=Y
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
    depends_on:
      - cardano-node-ogmios
      - postgres
    volumes:
      - ./config/cardano-db-sync/${NETWORK:-mainnet}:/config-db-sync
      - ./config/cardano-configurations/network/${NETWORK:-mainnet}:/config
      - node-ipc:/node-ipc
      - db-sync-data:/var/lib/cexplorer
      - db-sync-logs:/db-sync-logs
    restart: on-failure
    stop_signal: SIGINT
    logging:
      driver: "local"
      options:
        max-size: "200k"
        max-file: "10"

  kupo:
    image: cardanosolutions/kupo:${KUPO_VERSION:-v2.7.0}
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
    ports:
      - 127.0.0.1:${KUPO_PORT:-1442}:1442
    command: [
      "--node-socket", "/ipc/node.socket",
      "--node-config", "/config/cardano-node/config.json",
      "--since", "${KUPO_SINCE:-origin}",
      "--match", "${KUPO_MATCH:-*}",
      "--workdir", "/db",
      "--host", "0.0.0.0",
      "--port", "1442"
    ]
    depends_on:
      - cardano-node-ogmios
    volumes:
      - kupo-db:/db
      - node-ipc:/ipc
      - ./config/cardano-configurations/network/${NETWORK:-mainnet}:/config

  koios-tiny:
    build:
      context: .
      target: koios-tiny
    env_file: ./.env
    ports:
      - 127.0.0.1:${KOIOS_TINY_PORT:-8050}:8050
    depends_on:
      - postgres
    volumes:
      - db-sync-logs:/home/logs
    environment:
      - NETWORK=${NETWORK:-mainnet}
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  haproxy:
    image: haproxy:2.8.3
    env_file: ./.env
    environment:
      - OGMIOS_PORT=${OGMIOS_PORT:-1337}
      - KUPO_PORT=${KUPO_PORT:-1442}
      - KOIOS_TINY_PORT=${KOIOS_TINY_PORT:-8050}
    ports:
      - ${HAPROXY_PORT:-80}:8080
      - ${HAPROXY_SSL_PORT:-443}:8443
    shm_size: '2gb'
    volumes:
      - ./config/haproxy:/usr/local/etc/haproxy
      - /etc/ssl/xray.pem:/xray.pem
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

volumes:
  db-sync-logs:
  db-sync-data:
  node-db:
  node-ipc:
  postgres-data:
  kupo-db:

